---
title: "Civil Liberties and Inequalities"
author: "LÃ©o Persoz"
format: 
  dashboard:
    css: styles.css
    logo: images/LOGO_IMAGE.png
    nav-buttons: [github]
    github: https://github.com/YOUR_URL
theme: lux
execute:
  echo: false
  warning: false
  message: false
---

```{r load/install packages and datasets}
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, 
               here,
               sf,
               bslib, 
               bsicons,
               rnaturalearth, 
               plotly, 
               countrycode, 
               htmltools, 
               reactable,
               janitor,
               countrycode,
               gganimate
               #shiny,
               #car,
               #mgcv
               )

# load datasets
gini_raw <- read_csv(here("data/gini_coef.csv.csv"))

gni_cap_raw <- read_csv(here("data/gnicap_atm_con.csv"))

civil_lib_raw <- read_csv(here("data/cliberties_idea.csv"))

#general option of the document
options(scipen = 999)
```

```{r select years and pivot dataframe}
gini_long <- gini_raw %>%
  select(1, 147:225) %>%
  pivot_longer(cols = 2:80,
               names_to = "year", 
               values_to = "value"
               ) %>% 
  rename(gini_index = value) %>% 
  mutate(gini_index = gini_index/100)

gni_cap_long <- gni_cap_raw %>%
  mutate(across(2:ncol(gni_cap_raw), ~str_replace_all(., "k", "e3"))) %>%
  mutate(across(2:ncol(gni_cap_raw), ~str_replace_all(., "M", "e6"))) %>%
  pivot_longer(cols = 2:252,
               names_to = "year",
               values_to = "value") %>%
  mutate(value = as.numeric(value)) %>% 
  rename(gni_cap = value)

civil_lib_long <- civil_lib_raw %>%
  pivot_longer(cols = 2:48,
               names_to = "year",
               values_to = "value") %>% 
  rename(civlib_index = value)
```

```{r value box, highest/mean gini}
# creating dataframe with highest gini, factor the country var
top_highest_gini <- gini_long %>%
  filter(year == "2023") %>%
  mutate(country = case_when(country == "Central African Republic" ~ "Central Afr. Rep.", TRUE ~ country)) %>%
  arrange(desc(gini_index)) %>% 
  head(5)
  
top_highest_gini$country <- factor(top_highest_gini$country, levels = top_highest_gini$country)

# creating the graph to put within valuebox
sparkcol_highest_gini <- plot_ly(top_highest_gini) %>%
  add_bars(
    x = ~country, y = ~gini_index,
    text = ~country,
    textposition = "inside",
    textfont = list(color = "darkgrey"),
    insidetextanchor = "middle",
    color = I("white"), 
    alpha = 0.8
  ) %>%
  layout(
    xaxis = list(visible = F, showgrid = F, title = ""),
    yaxis = list(visible = T, showgrid = F, title = ""),
    hovermode = "x",
    margin = list(t = 0, r = 0, l = 0, b = 0),
    font = list(color = "white"),
    paper_bgcolor = "transparent",
    plot_bgcolor = "transparent"
  ) %>%
  config(displayModeBar = F) %>%
  htmlwidgets::onRender(
    "function(el) {
      el.closest('.bslib-value-box')
        .addEventListener('bslib.card', function(ev) {
          Plotly.relayout(el, {'xaxis.visible': ev.detail.fullScreen});
        })
    }"
  )

# checking how skewed the gini_index variable is
gini_index_hist <- gini_long %>%
  filter(year == "2023") %>%
  ggplot(aes(x = gini_index)) +
  geom_histogram(binwidth = 0.01, fill = "blue", color = "black") #sort of skewed but okay

# taking the mean (0.4) and not the median (0.38) because data isn't so skewed
mean_gini <- gini_long %>%
  filter(year == "2023") %>%
  summarize(mean_gini = round(mean(gini_index), 2))
```

```{r value box, highest/lowest civil liberties}
# creating dataframe for highest civil liberties, and factor the country var
top_highest_civlib <- civil_lib_long %>%
  filter(year == "2021") %>%
  arrange(desc(civlib_index)) %>% 
  head(5)
  
top_highest_civlib$country <- factor(top_highest_civlib$country, levels = top_highest_civlib$country)

# creating the graph to put within valuebox
sparkcol_highest_civlib <- plot_ly(top_highest_civlib) %>%
  add_bars(
    x = ~country, y = ~civlib_index,
    text = ~country,
    textposition = "inside",
    textfont = list(color = "darkgrey"),
    insidetextanchor = "middle",
    color = I("white"), 
    alpha = 0.8
  ) %>%
  layout(
    xaxis = list(visible = F, showgrid = F, title = ""),
    yaxis = list(visible = T, showgrid = F, title = ""),
    hovermode = "x",
    margin = list(t = 0, r = 0, l = 0, b = 0),
    font = list(color = "white"),
    paper_bgcolor = "transparent",
    plot_bgcolor = "transparent"
  ) %>%
  config(displayModeBar = F) %>%
  htmlwidgets::onRender(
    "function(el) {
      el.closest('.bslib-value-box')
        .addEventListener('bslib.card', function(ev) {
          Plotly.relayout(el, {'xaxis.visible': ev.detail.fullScreen});
        })
    }"
  )

# creating dataframe for lowest civil liberties and factor the country var
top_lowest_civlib <- civil_lib_long %>%
  filter(year == "2021") %>%
  arrange(civlib_index) %>% 
  head(5)
  
top_lowest_civlib$country <- factor(top_lowest_civlib$country, levels = top_lowest_civlib$country)

# creating the graph to put within valuebox
sparkcol_lowest_civlib <- plot_ly(top_lowest_civlib) %>%
  add_bars(
    x = ~country, y = ~civlib_index,
    text = ~country,
    textposition = "inside",
    textfont = list(color = "darkgrey"),
    insidetextanchor = "middle",
    color = I("white"), 
    alpha = 0.8
  ) %>%
  layout(
    xaxis = list(visible = F, showgrid = F, title = ""),
    yaxis = list(visible = T, showgrid = F, title = ""),
    hovermode = "x",
    margin = list(t = 0, r = 0, l = 0, b = 0),
    font = list(color = "white"),
    paper_bgcolor = "transparent",
    plot_bgcolor = "transparent"
  ) %>%
  config(displayModeBar = F) %>%
  htmlwidgets::onRender(
    "function(el) {
      el.closest('.bslib-value-box')
        .addEventListener('bslib.card', function(ev) {
          Plotly.relayout(el, {'xaxis.visible': ev.detail.fullScreen});
        })
    }"
  )
```

```{r gini worldmap}
# creating sf object, add country codes for joining
country_shapess <- rnaturalearth::ne_countries()

gini_long <- gini_long %>% 
  mutate(
    country_code = countrycode(country, 
                               "country.name", 
                               "iso3c"),
    continent = countrycode(country, 
                            "country.name",
                            "continent"))

# setdiff(gini_long$country_code, country_shapess$adm0_a3)
# setdiff(country_shapess$adm0_a3, gini_long$country_code) 

# joining gini and geometry
geom_x_gini <- left_join(country_shapess, gini_long, by = c("adm0_a3" = "country_code")) %>% 
  mutate(tooltip_label = paste(country,
                               round(gini_index, 2),
                               sep = ": ")) %>%
  filter(year == "2023")

#map fill gini 2023
geom_x_gini_map <- 
  geom_x_gini %>% 
  ggplot() +
  geom_sf(aes(fill = gini_index, text = tooltip_label, frame = year, geometry = geometry)) +
  labs(title = "Gini index (GI) per country, 2023",
       fill = "GI") +
  coord_sf(expand = F)

map_gini_plotly <- ggplotly(geom_x_gini_map, tooltip = "text")
```

```{r map civil liberties}
country_shapess <- rnaturalearth::ne_countries()

civil_lib_long <- civil_lib_long %>% 
  mutate(
    country_code = countrycode(country, 
                               "country.name", 
                               "iso3c"),
    continent = countrycode(country, 
                            "country.name",
                            "continent"))

# setdiff(civil_lib_long$country_code, country_shapess$adm0_a3)
# setdiff(country_shapess$adm0_a3, civil_lib_long$country_code) 

#joining civil liberty index and geometry
geom_x_civlib <- left_join(country_shapess, civil_lib_long, by = c("adm0_a3" = "country_code")) %>% 
  mutate(tooltip_label = paste(country,
                               civlib_index,
                               sep = ": "),
         year = as.numeric(year))

# map fill gini 2023
geom_x_civlib_map <- 
  geom_x_civlib %>% 
  ggplot() +
  geom_sf(aes(fill = civlib_index, text = tooltip_label)) +
  scale_fill_gradient(low = "lightgreen", high = "darkgreen") +
  labs(title = "Civil liberties Index (CLI) per country, 2021",
       fill = "CLI") +
  coord_sf(expand = F)

map_civlib_plotly <- ggplotly(geom_x_civlib_map, tooltip = "text")
```

```{r column graphs (attempt)}
# this was created when I thought about what was the most interesting to put in the dashboard. I ended up not including these graphs, as they are quite repetitive with the graphs within valueboxes.
highest_gini_2023 <- gini_long %>% 
  filter(year == "2023") %>% 
  arrange(desc(gini_index)) %>% 
  head(20)

highest_gini_2023_plot <- highest_gini_2023 %>% 
  ggplot() +
  geom_col(aes(y = gini_index, x = reorder(country, gini_index), fill = gini_index)) +
  scale_x_discrete(guide = guide_axis(angle = 45)) +
  labs(title = "Countries with highest Gini index, 2023",
       y = "Country",
       x = "Gini Index")

highest_gini_2023_plotly <- ggplotly(highest_gini_2023_plot) %>%
  layout(xaxis = list(tickangle = 45))

highest_gini_2000 <- gini_long %>% 
  filter(year == "2000") %>% 
  arrange(desc(gini_index)) %>% 
  head(20)

highest_gini_2000_plot <- highest_gini_2000 %>% 
  ggplot() +
  geom_col(aes(y = gini_index, x = reorder(country, gini_index), fill = gini_index)) +
  scale_x_discrete(guide = guide_axis(angle = 45)) +
  labs(title = "Countries with highest Gini index, 2000",
       y = "Country",
       x = "Gini Index")

highest_gini_2000_plotly <- ggplotly(highest_gini_2000_plot) %>%
  layout(xaxis = list(tickangle = 45))
```

```{r line graph mean gini}
# world's mean
mean_gini_year <- gini_long %>% 
  group_by(year) %>% 
  summarise(mean_gini = mean(gini_index, na.rm = T))

mean_gini_year <- 
  mean_gini_year %>% 
  mutate(year = as.character(year)) %>%
  mutate(mean_gini = as.numeric(mean_gini))

# continents means
mean_gini_year_asia <- gini_long %>% 
  filter(continent == "Asia") %>% 
  group_by(year) %>% 
  summarise(mean_gini_asia = mean(gini_index, na.rm = T))

mean_gini_year_africa <- gini_long %>% 
  filter(continent == "Africa") %>% 
  group_by(year) %>% 
  summarise(mean_gini_afr = mean(gini_index, na.rm = T))

mean_gini_year_EU <- gini_long %>% 
  filter(continent == "Europe") %>% 
  group_by(year) %>% 
  summarise(mean_gini_EU = mean(gini_index, na.rm = T))

mean_gini_year_ocea <- gini_long %>% 
  filter(continent == "Oceania") %>% 
  group_by(year) %>% 
  summarise(mean_gini_ocea = mean(gini_index, na.rm = T))

# creating north america and latin america (to avoid biases coming from economic differences between regions)
gini_long <- gini_long %>% 
  mutate(continent = case_when(country %in% c("USA", "Canada") & continent == "Americas" ~ "North America",
                               !(country %in% c("USA", "Canada")) & continent == "Americas" ~ "Latin America", T ~ continent))

mean_gini_year_northAM <- gini_long %>% 
  filter(continent == "North America") %>% 
  group_by(year) %>% 
  summarise(mean_gini_northam = mean(gini_index, na.rm = T))

mean_gini_year_latAM <- gini_long %>% 
  filter(continent == "Latin America") %>% 
  group_by(year) %>% 
  summarise(mean_gini_latam = mean(gini_index, na.rm = T))

# joining world's mean with regions' means in one data frame
mean_gini_year_all <- left_join(mean_gini_year, mean_gini_year_africa)
mean_gini_year_all <- left_join(mean_gini_year_all, mean_gini_year_asia)
mean_gini_year_all <- left_join(mean_gini_year_all, mean_gini_year_EU)
mean_gini_year_all <- left_join(mean_gini_year_all, mean_gini_year_northAM)
mean_gini_year_all <- left_join(mean_gini_year_all, mean_gini_year_latAM)
mean_gini_year_all <- left_join(mean_gini_year_all, mean_gini_year_ocea)

mean_gini_year_all <- mean_gini_year_all %>% 
  mutate(year = as.numeric(year))

# covert to long format, adapt the label of the tooltip for each variable for the ggplotly call
mean_gini_long <- mean_gini_year_all %>%
  pivot_longer(cols = starts_with("mean_gini"), names_to = "region", values_to = "mean_gini") %>%
  mutate(region = case_when(
    region == "mean_gini" ~ "World",
    region == "mean_gini_afr" ~ "Africa",
    region == "mean_gini_asia" ~ "Asia",
    region == "mean_gini_EU" ~ "Europe",
    region == "mean_gini_northam" ~ "North America",
    region == "mean_gini_latam" ~ "Latin America",
    region == "mean_gini_ocea" ~ "Oceania",
    TRUE ~ region),
  tooltip_label = paste(region, " (", year, "):", round(mean_gini, 2), sep = ""),
  year = as.numeric(year))

# creating the line graph
graph_mean_gini_all <- 
  mean_gini_long %>% 
  ggplot() +
  geom_line(aes(x = year, y = mean_gini, color = region, text = tooltip_label, group = region)) +
  scale_x_continuous(breaks = seq(min(mean_gini_year_all$year), max(mean_gini_year_all$year), by = 5),
                     guide = guide_axis(angle = 45)) +
  scale_y_continuous(limits = c(0.28, 0.5)) +
  labs(title = "Mean Gini index per year (world and regions)",
       x = "Year",
       y = "Mean Gini index",
       color = "Region") +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 7))

graph_mean_gini_all_plotly <- ggplotly(graph_mean_gini_all, tooltip = "text") %>%
  layout(xaxis = list(tickangle = 45))
```

```{r dataframe gini, civlib and GNI}
# adding country code and continent to the gni dataframe and filtering gini dataframe to 1975
gni_cap_long <- gni_cap_long %>%
  mutate(
    country_code = countrycode(country, 
                               "country.name", 
                               "iso3c"),
    continent = countrycode(country, 
                            "country.name",
                            "continent")) %>% 
  filter(between(as.numeric(year), 1975, 2021))

gini_long_75 <- gini_long %>% 
  filter(between(as.numeric(year), 1975, 2021))

# joining the gini, civil liberties and gni dataframe

#setdiff(gini_long_75$country_code, civil_lib_long$country_code)
#setdiff(civil_lib_long$country_code, gini_long_75$country_code)

intermed_join <- left_join(gini_long_75, civil_lib_long, by = c("country_code", "year"))

intermed_join <- intermed_join %>%
  select(-matches("\\.y")) %>% 
  rename(continent = continent.x,
         country = country.x)

gini_civlib_gni <- left_join(intermed_join, gni_cap_long, by = c("country_code", "year"))

gini_civlib_gni <- gini_civlib_gni %>%
  select(-matches("\\.y")) %>% 
  rename(continent = continent.x,
         country = country.x)

gini_civlib_gni <- gini_civlib_gni %>%
  mutate(year = as.numeric(year), 
         gini_index = as.numeric(gini_index),
         civlib_index = as.numeric(civlib_index),
         gni_cap = as.numeric(gni_cap))
```

```{r 3D graph: dataframe + data wrangling}
# creating regions
gini_civlib_gni_asia <- gini_civlib_gni %>% 
  filter(continent == "Asia") %>% 
  group_by(year) %>% 
  summarise(mean_gini_asi = mean(gini_index, na.rm = T),
            mean_civlib_asi = mean(civlib_index, na.rm = T),
            mean_gni_asi = mean(gni_cap, na.rm = T))

gini_civlib_gni_africa <- gini_civlib_gni %>% 
  filter(continent == "Africa") %>% 
  group_by(year) %>% 
  summarise(mean_gini_afr = mean(gini_index, na.rm = T),
            mean_civlib_afr = mean(civlib_index, na.rm = T),
            mean_gni_afr = mean(gni_cap, na.rm = T))

gini_civlib_gni_northam <- gini_civlib_gni %>% 
  filter(continent == "North America") %>% 
  group_by(year) %>% 
  summarise(mean_gini_northam = mean(gini_index, na.rm = T),
            mean_civlib_northam = mean(civlib_index, na.rm = T),
            mean_gni_northam = mean(gni_cap, na.rm = T))

gini_civlib_gni_latam <- gini_civlib_gni %>% 
  filter(continent == "Latin America") %>% 
  group_by(year) %>% 
  summarise(mean_gini_latam = mean(gini_index, na.rm = T),
            mean_civlib_latam = mean(civlib_index, na.rm = T),
            mean_gni_latam = mean(gni_cap, na.rm = T))

gini_civlib_gni_ocea <- gini_civlib_gni %>% 
  filter(continent == "Oceania") %>% 
  group_by(year) %>% 
  summarise(mean_gini_ocea = mean(gini_index, na.rm = T),
            mean_civlib_ocea = mean(civlib_index, na.rm = T),
            mean_gni_ocea = mean(gni_cap, na.rm = T))

gini_civlib_gni_eu <- gini_civlib_gni %>% 
  filter(continent == "Europe") %>% 
  group_by(year) %>% 
  summarise(mean_gini_eu = mean(gini_index, na.rm = T),
            mean_civlib_eu = mean(civlib_index, na.rm = T),
            mean_gni_eu = mean(gni_cap, na.rm = T))
  

 # joining datasets
mean_gini_civ_gni <- left_join(gini_civlib_gni_asia, gini_civlib_gni_africa)
mean_gini_civ_gni <- left_join(mean_gini_civ_gni, gini_civlib_gni_northam)
mean_gini_civ_gni <- left_join(mean_gini_civ_gni, gini_civlib_gni_latam)
mean_gini_civ_gni <- left_join(mean_gini_civ_gni, gini_civlib_gni_ocea)
mean_gini_civ_gni <- left_join(mean_gini_civ_gni, gini_civlib_gni_eu)

# pivoting and renaming variables
mean_gini_civ_gni_long <- mean_gini_civ_gni %>%
  pivot_longer(cols = starts_with("mean_"), 
               names_to = "names", 
               values_to = "value") %>% 
  separate(names, into = c("measure", "continent"), sep = "_", extra = "merge") %>% 
  separate(continent, into = c("measure_type", "continent"), sep = "_") %>% 
  select(-measure) %>% 
  pivot_wider(names_from = measure_type, values_from = value) %>% 
  mutate(continent = case_when(continent == "asi" ~ "Asia",
                               continent == "afr" ~ "Africa",
                               continent == "northam" ~ "N. America",
                               continent == "latam" ~ "L. America",
                               continent == "ocea" ~ "Oceania",
                               continent == "eu" ~ "Europe")) %>% 
  mutate(gini = round(gini, 2),
         civlib = round(civlib, 2), 
         gni = round(gni, 2))

mean_gini_civ_gni_long <- mean_gini_civ_gni_long %>% 
  mutate(year = as.numeric(year))

# creating a 3D graph - note that I just didn't manage to order the year aside of the color bar (I gave up to preserve my mental health). However, the data setting the graph are right.
tickvals <- seq(1975, 2021, 10)
ticktext <- as.character(tickvals)

plot_3D <- plot_ly(mean_gini_civ_gni_long, 
                   x = ~civlib, 
                   y = ~gini, 
                   z = ~gni, 
                   symbol = ~continent, 
                   symbols = c('circle', 'square', 'diamond', 'cross', 'x', 'triangle-up', 'triangle-down'), 
                   type = 'scatter3d', 
                   mode = 'markers',
                   hovertemplate = paste("CL index: %{x}", "<br>Gini Index: %{y}", "<br>GNI per capita: %{z}"),
                   marker = list(size = 5, 
                                 color = ~year, 
                                 colorscale = 'Viridis', 
                                 showscale = TRUE,
                                 colorbar = list(x = 1.4, y = 0.45, 
                                                 tickmode = "array", 
                                                 tickvals = tickvals,
                                                 ticktext = ticktext))) %>%
  layout(
    title = list(
      text = "3D Scatter Plot: Civil Liberties, Gini Index and GNI per capita",
      y = 0.98),
    scene = list(
      xaxis = list(title = 'Civil Liberties (CL) Index'),
      yaxis = list(title = 'Gini Index'),
      zaxis = list(title = 'Gross National Product per capita')
      ),
    legend = list(
      x = 1.00,
      y = 0.1,
      orientation = "v")
    )
```

```{r tests to select equation for regression before adding gni per cap}
smooth_gini_loess_plot <- ggplot(gini_civlib_gni, aes(x = civlib_index, y = gini_index)) +
  geom_point() +
  geom_smooth(method = "loess", col = "blue", se = T) +
  labs(title = "Linear regression: Gini index and Civil Liberty Index",
       x = "Civil Liberty Index",
       y = "Gini Index",
       color = "GNI per capita") +
  theme_minimal()

smooth_gini_lm_plot <- ggplot(gini_civlib_gni, aes(x = civlib_index, y = gini_index)) +
  geom_point() +
  geom_smooth(method = "lm", col = "blue", se = T) +
  labs(title = "Linear regression: Gini Index and Civil Liberty Index",
       x = "Civil Liberty Index",
       y = "Gini Index",
       color = "GNI per capita",
       caption = "The shaded area corresponds to the 95% confidence interval.") +
  theme_minimal()

smooth_gini_loess_plotly <- ggplotly(smooth_gini_loess_plot)

smooth_gini_lm_plotly <- ggplotly(smooth_gini_lm_plot)
```

```{r Multivariate analysis attempt}
# a quadratic equation explains substantially better the variance of the model than with a linear one (gain of approx. 0.05), but a cubic equation seems to already lead to overfitting the data as the gain in variance explained is only  approx. .005. However, the variance explained remains low, and it seems more controls should be included in the model in order to better explain the variance. Note that statistical significance is high in all these 3 models, but it shouldn't be surprising given the high amount of data fed into it.

polymodel_data <- na.omit(gini_civlib_gni) 

#model_poly_1 <- lm(gini_index ~ poly(civlib_index, 1) + poly(gni_cap, 1), data = polymodel_data)
model_poly_2 <- lm(gini_index ~ poly(civlib_index, 2) + poly(gni_cap, 2), data = polymodel_data)
#model_poly_3 <- lm(gini_index ~ poly(civlib_index, 3) + poly(gni_cap, 3), data = polymodel_data)
modelsummary <- summary(model_poly_2)

# creating dataframe for predicted data
prediction_data <- data.frame(
  civlib_index = seq(min(polymodel_data$civlib_index), max(polymodel_data$civlib_index), length.out = 100),
  gni_cap = mean(polymodel_data$gni_cap)) # Fixing gni_cap set as control

# inputting predicted data in the prediction dataframe
predictions <- predict(model_poly_2, newdata = prediction_data, se.fit = T)
prediction_data$gini_index <- predictions$fit
prediction_data$se <- predictions$se.fit
prediction_data$lower <- prediction_data$gini_index - 1.96 * prediction_data$se
prediction_data$upper <- prediction_data$gini_index + 1.96 * prediction_data$se

highest_gini <- prediction_data %>% 
  summarise(max_gini = max(gini_index))

polymodel_data <- polymodel_data %>% 
  mutate(tooltip_label = paste("CL Index:", civlib_index,
                               "<br>Gini Index:", gini_index,
                               "<br>GNI per capita:", gni_cap))

# creating regression line
reg_graph <- ggplot(data = polymodel_data, aes(x = civlib_index, y = gini_index)) +
  geom_point(aes(color = gni_cap, text = tooltip_label), alpha = 0.3) +
  geom_line(data = prediction_data, aes(x = civlib_index, y = gini_index), color = "red") +
  geom_ribbon(data = prediction_data, aes(x = civlib_index, ymin = lower, ymax = upper), alpha = 0.3) +
  labs(title = "Regression analysis: Gini and CL Indexes, GNI per capita",
       x = "Civil Liberty (CL) Index",
       y = "Gini Index",
       color = "GNI per capita",
       caption = "The shaded area corresponds to the 95% confidence interval.") +
  theme_minimal()

reg_graph_plotly <- ggplotly(reg_graph, tooltip = "text")
```

# SNAPSHOT

##  {height="30%"}

###  {width="40%"}

```{r}
# value box with highest and lowest gini in 2023
value_box(
  title = "Top 5 country with the highest Gini Index, 2023",
  value = tags$div(
    style = "font-size: 24px;",
    "Highest Gini Index: South Africa (0.66)",
    tags$br(),
    tags$span(
      style = "font-size: 20px;",  # Adjust the font size as needed
      "Mean Gini Index (worldwide):", mean_gini
    )
  ),
  showcase = sparkcol_highest_gini,
  full_screen = TRUE,
  theme = value_box_theme(bg = "#1E90FF")
)
```

###  {width="30%"}

```{r}
value_box(
  title = "Top 5 country with the highest Civil Liberties Index, 2023",
  value = tags$div(style = "font-size: 20px;", "Highest Civil Liberties Index: Estonia (91.0)"),
  showcase = sparkcol_highest_civlib,
  full_screen = TRUE,
  theme = value_box_theme(bg = "darkgreen")
)
```

###  {width="30%"}

```{r}
value_box(
  title = "Top 5 country with the lowest Civil Liberties Index, 2023",
  value = tags$div(style = "font-size: 20px;", "Lowest Civil Liberties Index: North Korea (5.78)"),
  showcase = sparkcol_lowest_civlib,
  full_screen = TRUE,
  theme = value_box_theme(bg = "darkgreen")
)
```

## {height=60%}

###  {width="50%"}

```{r}
map_gini_plotly
```

###  {width="50%"}

```{r}
map_civlib_plotly
```

# LONGITUDINAL DATA

##  {heigth="80%"}

###  {width="50%"}

```{r}
graph_mean_gini_all_plotly
```

###  {width="50%"}

```{r}
plot_3D
```

##  {height="20%"}

As shown in the line graph, Gini Indexes of each regions follow different patterns over time. However, it is possible to identify some trends among these regions, with a low rate of economic inequalities between 1975 and 1990, followed more recently by a general increase in economic inequalities since 2018 approximately.

As shown in the 3D scattered plot, a trend between regions is more difficult to interpret. Indeed, the rate of regions with similar income level range tends to vary quite a lot: for example, Europe have seen its rate of civil liberties increase, while it remained fairly similar in North America. similarly, while civil liberties increased in Africa over time, it actually decreased in Latin America - however, note that the rate of civil liberties remained higher in Latin America than in Africa at any time point. Concerning GNI per capita, trends are more present, with an fairly constant increase of this rate in each regions (although at various speed), followed by a slight decrease in the recent years (which thus seem to be inversely related to Gini Index, as this later indice increases in the recent years). **Note that the years are ordered in data behind the graph, but the years displayed aside of it are wrong.**

# MULTIVARIATE ANALYSIS

##  {layout-ncol="2"}

###  {width="50%"}

```{r fig.cap="Gini Index and Civil liberties Index are respectively set as dependent and independent variables. The shaded area corresponds to the 95% confidence interval."}
reg_graph_plotly
```

###  {width="50%"}

#### Description of the model's results {height="50%"}

The quadratic model appears to be the best fit for describing the relationship between civil liberties and economic inequality, as indicated by an increase in R-squared compared to a linear model and minimal gains when using a cubic model. However, with an R-squared of 0.1859, the model explains only a modest portion of the variance in the Gini index, suggesting the need for additional variables to better capture the complexity of economic inequality.

The results suggest an inverted-U relationship between civil liberties and inequality, where increasing civil liberties initially leads to greater inequality until a threshold (i.e. `r round(highest_gini, 4)`), beyond which further civil liberties reduce inequality. This relationship, while statistically significant, may not explain a large proportion of the variation on its own (R-squared value: 0.1859), highlighting the importance of considering other socio-economic factors.

GNI per capita, used as a control, also exhibits a non-linear relationship, where increases in GNI per capita initially reduce inequality but eventually lead to an increase after surpassing a certain point. This finding aligns with economic theories suggesting that the benefits of growth are not evenly distributed at higher income levels.

In conclusion, while the model yields statistically significant results, its relatively low explanatory power points to the need for a more comprehensive model, potentially incorporating other economic, social, and institutional factors.

####  {height="50%"}

```{r title="Summary of the regression model"}
modelsummary
```

# DATASET

A condensed dataset used in this dashboard is shown below, and can be downloaded as a CSV. For more detailed data on the indicator figuring in this dashboard, please visit the gapminder website.

```{r}
gini_civlib_gni_clean <- gini_civlib_gni %>% 
  select(country, continent, year, gini_index, civlib_index, gni_cap, - country_code) %>% 
  rename(Country = country,
         Continent = continent,
         Year = year,
         "Gini Index" = gini_index,
         "Civil Liberties Index" = civlib_index,
         "GNI per capita" = gni_cap) %>% 
  mutate(Year = as.character(Year)) %>% 
  filter(Year %in% c("1975", "1985", "2000", "2010", "2021"))
```

```{r title="Dataset"}
gini_civlib_gni_clean_reac <- htmltools::browsable( 
  tagList( 
    reactable(gini_civlib_gni_clean, defaultPageSize = 5, elementId = "gini-table", searchable = TRUE, filterable = TRUE),
    tags$button("Download as CSV", onclick = "Reactable.downloadDataCSV('gini-table')") 
    ) 
  )

gini_civlib_gni_clean_reac
```

# About

All data used in this dashboard is taken from the **Gapminder** website, which is an independent educational non-profit organization based in Sweden. It aims to combat global misconceptions by providing a fact-based worldview that everyone can understand. Founded in 2005 by Hans Rosling, Anna Rosling RÃ¶nnlund, and Ola Rosling, Gapminder uses reliable data to create engaging and easy-to-understand visualizations. Gapminderâs most notable tool, Gapminder World, allows users to explore historical data on various social, economic, and environmental indicators through interactive graphs.

**Description of the variables:**

**Gini Index:** The Gini Index is a measure of the level of inequality within a country. In other words, it is a statistical measure used to observe how a variable (e.g., wealth, income) is distributed across a population. The Gini Index is calculated using the Lorenz curve, which plots the cumulative share of income received by the population on the y-axis against the cumulative share of the population on the x-axis.

In the case of perfect equality, the Lorenz curve would be a straight line from the origin at a 45-degree angle, representing equal distribution. When inequality is present, the Lorenz curve bows below this line of equality, creating an area between the line of equality and the curve. The size of this area represents the Gini Index.

The Gini Index ranges between 0 and 1:

A Gini Index of 0 represents perfect equality, where everyone has the same income or wealth.
A Gini Index of 1 represents perfect inequality, where all income or wealth is held by a single individual.
Here is a video that explains how the Gini Index is calculated:

<iframe width="560" height="315" src="https://www.youtube.com/embed/y8y-gaNbe4U?si=of0Dji7C2luME35f" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen>

</iframe>

**Civil Liberties Index:** The civil liberties subattribute denotes the extent to which civil rights and liberties are respected. The five civil liberties sub-components are freedom of expression, freedom of association and assembly, freedom of religion, freedom of movement, and personal integrity and security, each of which reflects core concepts in the human rights literature. The five sub-components were aggregated into the civil liberties subattribute using BFA.

**GNI per capita:** GNI per capita (formerly GNP per capita) is the gross national income, converted to U.S. dollars using the World Bank Atlas method, divided by the midyear population. GNI is the sum of value added by all resident producers plus any product taxes (less subsidies) not included in the valuation of output plus net receipts of primary income (compensation of employees and property income) from abroad.
